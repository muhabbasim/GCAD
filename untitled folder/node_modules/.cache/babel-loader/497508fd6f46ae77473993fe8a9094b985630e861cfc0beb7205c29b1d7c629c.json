{"ast":null,"code":"import Isotope from 'isotope-layout';\nimport matchesSelector from 'matches-selector';\nimport imagesLoaded from 'imagesloaded';\nconst initIsotope = father => {\n  const grids = document.querySelectorAll(`.${father}`);\n  let isos = [];\n  const initializeIsotope = (grid, options = {}) => {\n    const iso = new Isotope(grid, {\n      itemSelector: '.items',\n      ...options\n    });\n    imagesLoaded(grid).on('always', () => {\n      iso.layout();\n      isos.push(iso);\n    });\n  };\n  if (grids.length >= 1) {\n    grids.forEach(grid => {\n      if (grid.classList.contains('gallery2')) {\n        // For the gallery2 grid, add special layout options\n        initializeIsotope(grid, {\n          masonry: {\n            columnWidth: '.width2'\n          }\n        });\n      } else {\n        // For other grids, use the default layout options\n        initializeIsotope(grid);\n      }\n    });\n  }\n  const filtersElem = document.querySelector('.filtering');\n  const buttonGroups = document.querySelectorAll('.filtering');\n\n  // Now that all Isotope instances are initialized, you can proceed with event handling\n  if (filtersElem) {\n    filtersElem.addEventListener('click', function (event) {\n      if (!matchesSelector(event.target, 'span')) {\n        return;\n      }\n      const filterValue = event.target.getAttribute('dataFilter');\n\n      // Update all Isotope instances\n      isos.forEach(iso => {\n        iso.arrange({\n          filter: filterValue\n        });\n      });\n    });\n    const radioButtonGroup = buttonGroup => {\n      buttonGroup.addEventListener('click', event => {\n        if (!matchesSelector(event.target, 'span')) {\n          return;\n        }\n        buttonGroup.querySelector('.active').classList.remove('active');\n        event.target.classList.add('active');\n      });\n    };\n    buttonGroups.forEach(buttonGroup => {\n      radioButtonGroup(buttonGroup);\n    });\n  }\n};\nexport default initIsotope;","map":{"version":3,"names":["Isotope","matchesSelector","imagesLoaded","initIsotope","father","grids","document","querySelectorAll","isos","initializeIsotope","grid","options","iso","itemSelector","on","layout","push","length","forEach","classList","contains","masonry","columnWidth","filtersElem","querySelector","buttonGroups","addEventListener","event","target","filterValue","getAttribute","arrange","filter","radioButtonGroup","buttonGroup","remove","add"],"sources":["/Users/mugtabaali/Desktop/GCAD/COMPONENTS/infolio-reactjs/src/common/initIsotope.js"],"sourcesContent":["import Isotope from 'isotope-layout';\r\nimport matchesSelector from 'matches-selector';\r\nimport imagesLoaded from 'imagesloaded';\r\n\r\nconst initIsotope = (father) => {\r\n  const grids = document.querySelectorAll(`.${father}`);\r\n  let isos = [];\r\n\r\n  const initializeIsotope = (grid, options = {}) => {\r\n    const iso = new Isotope(grid, {\r\n      itemSelector: '.items',\r\n      ...options,\r\n    });\r\n\r\n    imagesLoaded(grid).on('always', () => {\r\n      iso.layout();\r\n      isos.push(iso);\r\n    });\r\n  };\r\n\r\n  if (grids.length >= 1) {\r\n    grids.forEach((grid) => {\r\n      if (grid.classList.contains('gallery2')) {\r\n        // For the gallery2 grid, add special layout options\r\n        initializeIsotope(grid, {\r\n          masonry: {\r\n            columnWidth: '.width2',\r\n          },\r\n        });\r\n      } else {\r\n        // For other grids, use the default layout options\r\n        initializeIsotope(grid);\r\n      }\r\n    });\r\n  }\r\n\r\n  const filtersElem = document.querySelector('.filtering');\r\n  const buttonGroups = document.querySelectorAll('.filtering');\r\n\r\n  // Now that all Isotope instances are initialized, you can proceed with event handling\r\n  if (filtersElem) {\r\n    filtersElem.addEventListener('click', function (event) {\r\n      if (!matchesSelector(event.target, 'span')) {\r\n        return;\r\n      }\r\n      const filterValue = event.target.getAttribute('dataFilter');\r\n\r\n      // Update all Isotope instances\r\n      isos.forEach((iso) => {\r\n        iso.arrange({ filter: filterValue });\r\n      });\r\n    });\r\n\r\n    const radioButtonGroup = (buttonGroup) => {\r\n      buttonGroup.addEventListener('click', (event) => {\r\n        if (!matchesSelector(event.target, 'span')) {\r\n          return;\r\n        }\r\n        buttonGroup.querySelector('.active').classList.remove('active');\r\n        event.target.classList.add('active');\r\n      });\r\n    };\r\n\r\n    buttonGroups.forEach((buttonGroup) => {\r\n      radioButtonGroup(buttonGroup);\r\n    });\r\n  }\r\n};\r\n\r\nexport default initIsotope;\r\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,gBAAgB;AACpC,OAAOC,eAAe,MAAM,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,cAAc;AAEvC,MAAMC,WAAW,GAAIC,MAAM,IAAK;EAC9B,MAAMC,KAAK,GAAGC,QAAQ,CAACC,gBAAgB,CAAE,IAAGH,MAAO,EAAC,CAAC;EACrD,IAAII,IAAI,GAAG,EAAE;EAEb,MAAMC,iBAAiB,GAAGA,CAACC,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;IAChD,MAAMC,GAAG,GAAG,IAAIZ,OAAO,CAACU,IAAI,EAAE;MAC5BG,YAAY,EAAE,QAAQ;MACtB,GAAGF;IACL,CAAC,CAAC;IAEFT,YAAY,CAACQ,IAAI,CAAC,CAACI,EAAE,CAAC,QAAQ,EAAE,MAAM;MACpCF,GAAG,CAACG,MAAM,CAAC,CAAC;MACZP,IAAI,CAACQ,IAAI,CAACJ,GAAG,CAAC;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,IAAIP,KAAK,CAACY,MAAM,IAAI,CAAC,EAAE;IACrBZ,KAAK,CAACa,OAAO,CAAER,IAAI,IAAK;MACtB,IAAIA,IAAI,CAACS,SAAS,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAE;QACvC;QACAX,iBAAiB,CAACC,IAAI,EAAE;UACtBW,OAAO,EAAE;YACPC,WAAW,EAAE;UACf;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACL;QACAb,iBAAiB,CAACC,IAAI,CAAC;MACzB;IACF,CAAC,CAAC;EACJ;EAEA,MAAMa,WAAW,GAAGjB,QAAQ,CAACkB,aAAa,CAAC,YAAY,CAAC;EACxD,MAAMC,YAAY,GAAGnB,QAAQ,CAACC,gBAAgB,CAAC,YAAY,CAAC;;EAE5D;EACA,IAAIgB,WAAW,EAAE;IACfA,WAAW,CAACG,gBAAgB,CAAC,OAAO,EAAE,UAAUC,KAAK,EAAE;MACrD,IAAI,CAAC1B,eAAe,CAAC0B,KAAK,CAACC,MAAM,EAAE,MAAM,CAAC,EAAE;QAC1C;MACF;MACA,MAAMC,WAAW,GAAGF,KAAK,CAACC,MAAM,CAACE,YAAY,CAAC,YAAY,CAAC;;MAE3D;MACAtB,IAAI,CAACU,OAAO,CAAEN,GAAG,IAAK;QACpBA,GAAG,CAACmB,OAAO,CAAC;UAAEC,MAAM,EAAEH;QAAY,CAAC,CAAC;MACtC,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,MAAMI,gBAAgB,GAAIC,WAAW,IAAK;MACxCA,WAAW,CAACR,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK;QAC/C,IAAI,CAAC1B,eAAe,CAAC0B,KAAK,CAACC,MAAM,EAAE,MAAM,CAAC,EAAE;UAC1C;QACF;QACAM,WAAW,CAACV,aAAa,CAAC,SAAS,CAAC,CAACL,SAAS,CAACgB,MAAM,CAAC,QAAQ,CAAC;QAC/DR,KAAK,CAACC,MAAM,CAACT,SAAS,CAACiB,GAAG,CAAC,QAAQ,CAAC;MACtC,CAAC,CAAC;IACJ,CAAC;IAEDX,YAAY,CAACP,OAAO,CAAEgB,WAAW,IAAK;MACpCD,gBAAgB,CAACC,WAAW,CAAC;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC;AAED,eAAe/B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}